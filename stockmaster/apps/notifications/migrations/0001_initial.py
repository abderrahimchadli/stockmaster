# Generated by Django 4.2.8 on 2025-04-08 14:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('slack', 'Slack'), ('webhook', 'Webhook'), ('in_app', 'In-App Notification')], help_text='Type of notification channel', max_length=50)),
                ('name', models.CharField(help_text='Channel name', max_length=255)),
                ('email_recipients', models.TextField(blank=True, help_text='Comma-separated list of email recipients', null=True)),
                ('slack_webhook_url', models.URLField(blank=True, help_text='Slack webhook URL', null=True)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for custom integrations', null=True)),
                ('webhook_secret', models.CharField(blank=True, help_text='Secret key for webhook security', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the channel is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_channels', to='accounts.shopifystore')),
            ],
            options={
                'verbose_name': 'Notification Channel',
                'verbose_name_plural': 'Notification Channels',
                'unique_together': {('store', 'name')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('out_of_stock', 'Product Out of Stock'), ('low_stock', 'Product Low Stock'), ('back_in_stock', 'Product Back in Stock'), ('rule_applied', 'Rule Applied'), ('rule_reversed', 'Rule Reversed'), ('error', 'System Error')], help_text='Type of event to notify about', max_length=50)),
                ('product_type_filter', models.CharField(blank=True, help_text='Notify only for specific product types', max_length=255, null=True)),
                ('vendor_filter', models.CharField(blank=True, help_text='Notify only for specific vendors', max_length=255, null=True)),
                ('tag_filter', models.CharField(blank=True, help_text='Notify only for products with specific tags', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the preference is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='notifications.notificationchannel')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to='accounts.shopifystore')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'unique_together': {('store', 'channel', 'event_type')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(help_text='Type of event that triggered the notification', max_length=50)),
                ('title', models.CharField(help_text='Notification title', max_length=255)),
                ('message', models.TextField(help_text='Notification message')),
                ('object_type', models.CharField(blank=True, help_text='Type of related object', max_length=50, null=True)),
                ('object_id', models.CharField(blank=True, help_text='ID of related object', max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('read', 'Read')], default='pending', help_text='Current status of the notification', max_length=50)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the notification was sent', null=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='When the notification was read', null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationchannel')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.shopifystore')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['store', 'status'], name='notificatio_store_i_230223_idx'), models.Index(fields=['store', 'event_type'], name='notificatio_store_i_58dd3d_idx'), models.Index(fields=['created_at'], name='notificatio_created_46ad24_idx')],
            },
        ),
    ]
