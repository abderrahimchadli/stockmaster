# Generated by Django 4.2.8 on 2025-04-08 14:15

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.BigIntegerField(help_text='Shopify location ID')),
                ('name', models.CharField(help_text='Location name', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the location is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locations', to='accounts.shopifystore')),
            ],
            options={
                'verbose_name': 'Inventory Location',
                'verbose_name_plural': 'Inventory Locations',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.BigIntegerField(help_text='Shopify product ID')),
                ('title', models.CharField(help_text='Product title', max_length=255)),
                ('handle', models.CharField(help_text='Product handle/slug', max_length=255)),
                ('product_type', models.CharField(blank=True, help_text='Product type', max_length=255, null=True)),
                ('vendor', models.CharField(blank=True, help_text='Product vendor', max_length=255, null=True)),
                ('status', models.CharField(default='active', help_text='Product status (active, draft, archived)', max_length=50)),
                ('published_at', models.DateTimeField(blank=True, help_text='When the product was published', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced', models.DateTimeField(default=django.utils.timezone.now, help_text='When the product was last synced from Shopify')),
                ('is_visible', models.BooleanField(default=True, help_text='Whether the product is visible on the storefront')),
                ('hidden_at', models.DateTimeField(blank=True, help_text='When the product was hidden', null=True)),
                ('scheduled_return', models.DateTimeField(blank=True, help_text='When the product is scheduled to be visible again', null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='accounts.shopifystore')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.BigIntegerField(help_text='Shopify variant ID')),
                ('title', models.CharField(help_text='Variant title', max_length=255)),
                ('sku', models.CharField(blank=True, help_text='Stock keeping unit', max_length=255, null=True)),
                ('barcode', models.CharField(blank=True, help_text='Barcode or UPC', max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Variant price', max_digits=10)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, help_text='Compare at price', max_digits=10, null=True)),
                ('position', models.IntegerField(default=1, help_text='Variant position')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inventory_item_id', models.BigIntegerField(help_text='Shopify inventory item ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='inventory.product')),
            ],
            options={
                'verbose_name': 'Product Variant',
                'verbose_name_plural': 'Product Variants',
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('sync', 'Synced from Shopify'), ('hide', 'Product Hidden'), ('show', 'Product Shown'), ('schedule', 'Visibility Scheduled'), ('rule', 'Rule Applied'), ('manual', 'Manual Update')], help_text='The type of action performed', max_length=50)),
                ('previous_value', models.IntegerField(blank=True, help_text='Previous inventory quantity', null=True)),
                ('new_value', models.IntegerField(blank=True, help_text='New inventory quantity', null=True)),
                ('previous_status', models.CharField(blank=True, help_text='Previous product status', max_length=50, null=True)),
                ('new_status', models.CharField(blank=True, help_text='New product status', max_length=50, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional information about the change', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to='inventory.inventorylocation')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to='inventory.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to='accounts.shopifystore')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to='inventory.productvariant')),
            ],
            options={
                'verbose_name': 'Inventory Log',
                'verbose_name_plural': 'Inventory Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.IntegerField(default=0, help_text='Available quantity')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced', models.DateTimeField(default=django.utils.timezone.now, help_text='When the inventory was last synced from Shopify')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_levels', to='inventory.inventorylocation')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_levels', to='inventory.productvariant')),
            ],
            options={
                'verbose_name': 'Inventory Level',
                'verbose_name_plural': 'Inventory Levels',
            },
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['shopify_id'], name='inventory_p_shopify_79c728_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['inventory_item_id'], name='inventory_p_invento_8f777f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productvariant',
            unique_together={('product', 'shopify_id')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'shopify_id'], name='inventory_p_store_i_128f4a_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'handle'], name='inventory_p_store_i_4f209b_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'is_visible'], name='inventory_p_store_i_89f19c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('store', 'shopify_id')},
        ),
        migrations.AddIndex(
            model_name='inventorylog',
            index=models.Index(fields=['store', 'created_at'], name='inventory_i_store_i_fbb51c_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorylog',
            index=models.Index(fields=['product', 'created_at'], name='inventory_i_product_77a951_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorylocation',
            unique_together={('store', 'shopify_id')},
        ),
        migrations.AddIndex(
            model_name='inventorylevel',
            index=models.Index(fields=['variant', 'location'], name='inventory_i_variant_2a9c1b_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorylevel',
            index=models.Index(fields=['available'], name='inventory_i_availab_ec40c9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorylevel',
            unique_together={('variant', 'location')},
        ),
    ]
